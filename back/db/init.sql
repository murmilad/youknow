SELECT 'CREATE USER postgres'
WHERE NOT EXISTS(SELECT FROM pg_catalog.pg_roles WHERE rolname = 'postgres')\gexec

SELECT 'CREATE DATABASE youknow'
WHERE NOT EXISTS (SELECT FROM pg_database WHERE datname = 'youknow')\gexec

GRANT ALL PRIVILEGES ON DATABASE youknow TO postgres;

\c youknow;
 
CREATE TABLE IF NOT EXISTS users (
    id uuid DEFAULT gen_random_uuid() NOT NULL PRIMARY KEY,
    name character varying(255) NOT NULL,
    email text NOT NULL,
    password text NOT NULL,
    role character varying(255) NOT NULL,
    provider text NOT NULL,
    photo text NOT NULL,
    verification_code text,
    verified boolean NOT NULL,
    timezone character varying(255),
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    UNIQUE (email, provider)
);
ALTER TABLE users add IF NOT EXISTS timezone character varying(255);


CREATE TABLE IF NOT EXISTS lesson_types (
    handler character varying(255) PRIMARY KEY,
    deleted boolean NOT NULL DEFAULT false
);
INSERT INTO lesson_types (handler)
SELECT 'FORGET_CURVE'
    WHERE NOT EXISTS (
        SELECT handler FROM lesson_types WHERE handler = 'FORGET_CURVE'
    );


DO $$ BEGIN
    CREATE TYPE know_status AS ENUM ('KNOW_NEW', 'KNOW_RIGHT', 'KNOW_WRONG');
EXCEPTION
    WHEN duplicate_object THEN null;
END $$;
DO $$ BEGIN
    CREATE TYPE lesson_status AS ENUM ('LESSON_NEW', 'LESSON_STARTED', 'LESSON_FINISHED');
EXCEPTION
    WHEN duplicate_object THEN null;
END $$;

CREATE TABLE IF NOT EXISTS lessons (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    show_at timestamp with time zone NOT NULL,
    show_times int NOT NULL,
    lesson_type_handler character varying(255) NOT NULL REFERENCES lesson_types(handler),
    lesson_status lesson_status NOT NULL DEFAULT 'LESSON_NEW',
    user_id uuid NOT NULL REFERENCES users(id),
    deleted boolean NOT NULL DEFAULT false
);

CREATE TABLE IF NOT EXISTS lessons_knows (
    know_id bigint NOT NULL REFERENCES knows(id),
    lesson_id bigint NOT NULL REFERENCES lessons(id),
    know_status know_status NOT NULL DEFAULT 'KNOW_NEW',
    ask_at timestamp with time zone NOT NULL,
    ask_times int NOT NULL,
    deleted boolean NOT NULL DEFAULT false,
    PRIMARY KEY (know_id, lesson_id)
);



CREATE TABLE IF NOT EXISTS know_types (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name text NOT NULL,
    style text NOT NULL,
    user_id uuid NOT NULL REFERENCES users(id),
    deleted boolean NOT NULL DEFAULT false
);

CREATE TABLE IF NOT EXISTS knows (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    knowtype_id bigint NOT NULL REFERENCES know_types(id),
    lesson_type_handler character varying(255) NOT NULL REFERENCES lesson_types(handler),
    name text NOT NULL,
    value text NOT NULL,
    deleted boolean NOT NULL DEFAULT false
);
ALTER TABLE knows add IF NOT EXISTS lesson_type_handler character varying(255) NOT NULL REFERENCES lesson_types(handler) DEFAULT 'FORGET_CURVE';



