version: "3.6"
services:
  # DB
  db:
    environment:
      - POSTGRES_HOST
      - POSTGRES_PORT
    build:
      context: ./back/db
    ports:
      - ${POSTGRES_PORT}:5432
  # Backend application
  backend:
    environment:
      - POSTGRES_HOST
      - POSTGRES_PORT
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB

      - BACKEND_PORT
      - CLIENT_ORIGIN

      - EMAIL_FROM
      - SMTP_HOST
      - SMTP_USER
      - SMTP_PASS
      - SMTP_PORT

      - TOKEN_EXPIRED_IN
      - TOKEN_MAXAGE

      - TOKEN_SECRET

      - GOOGLE_OAUTH_CLIENT_ID
      - GOOGLE_OAUTH_CLIENT_SECRET
      - GOOGLE_OAUTH_REDIRECT_URL

      - GITHUB_OAUTH_CLIENT_ID
      - GITHUB_OAUTH_CLIENT_SECRET
      - GITHUB_OAUTH_REDIRECT_URL
    build:
      context: ./back/service
    volumes:
      - log-backend:/log
    depends_on:
      - db
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}

  # Frontend web application
  frontend:
    environment:
      - FRONTEND_PORT

      - REACT_APP_BACKEND_ADDRESS
      - REACT_APP_BACKEND_PORT

      - REACT_APP_GOOGLE_OAUTH_CLIENT_ID
      - REACT_APP_GOOGLE_OAUTH_REDIRECT

      - REACT_APP_GITHUB_OAUTH_CLIENT_ID
      - REACT_APP_GITHUB_OAUTH_REDIRECT
    build:
      context: ./front/library
    depends_on:
      - backend
    ports:
      - ${FRONTEND_PORT}:3000
  # External proxy
  proxy:
    environment:
      - SERVER_IP
      - SERVER_NAME
      - SERVER_PORT
      - FRONTEND_PORT
      - BACKEND_PORT
    build: ./proxy
    volumes:
      - log-proxy:/var/log/nginx
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    depends_on:
      - frontend
    command: /bin/bash /bin/start_nginx.sh
  fail2ban:
    image: crazymax/fail2ban:latest
    container_name: fail2ban
    restart: "unless-stopped"
    network_mode: "host"
    cap_add:
      - NET_ADMIN
      - NET_RAW
    volumes:
      - log-proxy:/var/log/nginx
      - log-backend:/log
      - log-file2ban:/var/log
      - "./proxy/fail2ban-data:/data"
      - "/var/log:/var/log:ro"
      - "/var/lib/docker/containers/:/container-logs/:ro"
    env_file:
      - "./proxy/fail2ban.env"
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "10"
volumes:
  log-backend:
  log-proxy:
  log-file2ban: