limit_req_zone $http_x_forwarded_for zone=one:20m rate=100r/s;
log_format  proxy  '$remote_addr - $remote_user [$time_local] "$host$request_uri" '
                '$status $body_bytes_sent "$http_referer" '
                '"$http_user_agent" "$http_x_forwarded_for"';

server {
    listen ${SERVER_PORT};
    server_name ${SERVER_NAME};

    access_log /var/log/nginx/${SERVER_NAME}-access.log proxy;
    error_log /var/log/nginx/${SERVER_NAME}-error.log warn;

    location / {
        access_log /var/log/nginx/${SERVER_NAME}-frontend-access.log proxy;
        error_log /var/log/nginx/${SERVER_NAME}-frontend-error.log warn;
        proxy_pass ${PROXY_REDIRECT_ADDRESS}:${FRONTEND_PORT};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        limit_req   zone=one  burst=1 nodelay;
    }


    location /api {
        access_log /var/log/nginx/${SERVER_NAME}-backend-access.log proxy;
        error_log /var/log/nginx/${SERVER_NAME}-backend-error.log warn;
        proxy_pass ${PROXY_REDIRECT_ADDRESS}:${BACKEND_PORT};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        limit_req   zone=one  burst=1 nodelay;
    }

    location = /netdata {
        return 301 /netdata/;
    }

    location ~ /netdata/(?<ndpath>.*) {
        proxy_redirect off;
        proxy_set_header Host $host;

        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_pass_request_headers on;
        proxy_set_header Connection "keep-alive";
        proxy_store off;

        access_log /var/log/nginx/${SERVER_NAME}-netdata-access.log proxy;
        error_log /var/log/nginx/${SERVER_NAME}-netdata-error.log warn;
        proxy_pass ${PROXY_REDIRECT_ADDRESS}:${NETDATA_PORT}/$ndpath$is_args$args;

        gzip on;
        gzip_proxied any;
        gzip_types *;

        limit_req   zone=one  burst=1 nodelay;
    }


    location /basic_status {
        stub_status;
    }
}
